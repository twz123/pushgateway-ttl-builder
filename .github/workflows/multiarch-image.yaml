name: Multiarch image

on:
  push:
    branches:
      - main
    tags:
      - v*
  pull_request:

jobs:
  build:
    name: Build image
    runs-on: ubuntu-22.04

    strategy:
      fail-fast: false
      matrix:
        reproducible: [main, control]
        include:
          - reproducible: main
            push: ${{ startsWith(github.ref, 'refs/tags/') }}
          - reproducible: control

    outputs:
      iid: ${{ steps.run-manifest.outputs.iid }}
      main-manifest: ${{ steps.store-manifest.outputs.main-manifest }}
      control-manifest: ${{ steps.store-manifest.outputs.control-manifest }}

    steps:
      - name: Install Podman v4.2.0
        # https://github.com/containers/podman/issues/14065#issuecomment-1221549603
        run: |
          wget http://ftp.us.debian.org/debian/pool/main/libp/libpod/podman_4.2.0+ds1-3_amd64.deb
          sudo dpkg -i podman_4.2.0+ds1-3_amd64.deb
          mkdir -p ~/.config/containers
          echo '[storage]' >> ~/.config/containers/storage.conf
          echo 'driver = "overlay"' >> ~/.config/containers/storage.conf
          podman version

      - name: Checkout
        uses: actions/checkout@v3
        with:
          persist-credentials: false

      - name: 'Make: OCI manifest'
        timeout-minutes: 10
        run: make oci-manifest

      - name: List local images
        if: always()
        run: podman images --format "table {{.ID}} {{.Repository}} {{.Tag}} {{.Labels}} {{.Digest}}"

      - name: 'Smoke test: Run manifest'
        id: run-manifest
        run: |
          iid=$(cat .build/*/manifest.iid)
          echo "::set-output name=iid::$iid"
          podman run --rm -- "$iid"

      - name: Store ${{ matrix.reproducible }} manifest
        id: store-manifest
        env:
          IID: ${{ steps.run-manifest.outputs.iid }}
        run: podman manifest inspect "$IID" | jq --raw-output '"::set-output name=${{ matrix.reproducible }}-manifest::" + tojson'

      - name: Log in to Quay.io
        if: matrix.push
        uses: redhat-actions/podman-login@v1
        with:
          username: ${{ secrets.QUAY_USER }}
          password: ${{ secrets.QUAY_PASSWORD }}
          registry: quay.io

      - name: Push to Quay.io
        if: matrix.push
        env:
          IID: ${{ steps.run-manifest.outputs.iid }}
          IMAGE: docker://quay.io/k0sproject/pushgateway-ttl:${{ github.ref_name }}
        run: podman manifest push --all "$IID" "$IMAGE"

  verify:
    name: Verify reproducible builds
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Verify
        env:
          MAIN_MANIFEST: ${{ needs.build.outputs.main-manifest }}
          CONTROL_MANIFEST: ${{ needs.build.outputs.control-manifest }}
        run: |
          if [ -z "$MAIN_MANIFEST" ] || [ -z "$CONTROL_MANIFEST" ]; then
            echo ::error::Manifests missing!
            exit 1
          fi
          if [ "$MAIN_MANIFEST" != "$CONTROL_MANIFEST" ]; then
            echo ::error::Build was not reproducible!
            exit 1
          fi
